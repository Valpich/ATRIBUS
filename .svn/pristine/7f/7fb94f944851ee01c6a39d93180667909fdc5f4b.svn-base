<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>LogsConnexion.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.beans</a> &gt; <span class="el_source">LogsConnexion.java</span></div><h1>LogsConnexion.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.beans;

import java.io.File;
import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;


public class LogsConnexion implements Serializable {

  private static final long serialVersionUID = -2446434313782516825L;
<span class="nc" id="L15">  private static final Logger LOGGER = Logger.getLogger(LogsConnexion.class.getName());</span>
  private static final String EXCEPTION = &quot;Exception&quot;;
  private static final String CATALINA = &quot;catalina.base&quot;;
  private static final String LOG = &quot;/logs/&quot;;

  private LogsConnexion() {
<span class="nc" id="L21">    super();</span>
<span class="nc" id="L22">  }</span>

  public static List&lt;String&gt; getListeLogsFiltrer(String filtre) {
<span class="nc" id="L25">    final ArrayList&lt;String&gt; logs = new ArrayList&lt;&gt;();</span>
    try {
<span class="nc" id="L27">      final File dossier = new java.io.File(System.getProperty(CATALINA) + LOG);</span>
<span class="nc" id="L28">      final File[] listeLogs = dossier.listFiles();</span>
<span class="nc bnc" id="L29" title="All 2 branches missed.">      for (final File log : listeLogs) {</span>
<span class="nc bnc" id="L30" title="All 2 branches missed.">        if (log.getName().contains(filtre)) {</span>
<span class="nc" id="L31">          logs.add(log.getName());</span>
        }
      }
<span class="nc" id="L34">    } catch (final NullPointerException npe) {</span>
<span class="nc" id="L35">      LogsConnexion.LOGGER.log(Level.INFO, EXCEPTION, npe);</span>
<span class="nc" id="L36">    }</span>
<span class="nc" id="L37">    return logs;</span>
  }

  public static List&lt;String&gt; getListeLogs() {
<span class="nc" id="L41">    final ArrayList&lt;String&gt; logs = new ArrayList&lt;&gt;();</span>
    try {
<span class="nc" id="L43">      final File dossier = new java.io.File(System.getProperty(CATALINA) + LOG);</span>
<span class="nc bnc" id="L44" title="All 2 branches missed.">      for (final File log : dossier.listFiles()) {</span>
<span class="nc" id="L45">        logs.add(log.getName());</span>
      }
<span class="nc" id="L47">    } catch (final NullPointerException npe) {</span>
<span class="nc" id="L48">      LogsConnexion.LOGGER.log(Level.INFO, &quot;Exception&quot;, npe);</span>
<span class="nc" id="L49">    }</span>
<span class="nc" id="L50">    return logs;</span>
  }

  public static List&lt;String&gt; getLogFromName(String choix) {
<span class="nc" id="L54">    final ArrayList&lt;String&gt; logs = new ArrayList&lt;&gt;();</span>
<span class="nc" id="L55">    java.io.FileInputStream fin = null;</span>
    try {
<span class="nc" id="L57">      fin =</span>
<span class="nc" id="L58">          new java.io.FileInputStream(new java.io.File(System.getProperty(CATALINA) + LOG + choix));</span>
<span class="nc" id="L59">      extracted(logs, fin);</span>
<span class="nc" id="L60">      extracted(fin);</span>
<span class="nc" id="L61">    } catch (final IOException ioe) {</span>
<span class="nc" id="L62">      LogsConnexion.LOGGER.log(Level.INFO, EXCEPTION, ioe);</span>
<span class="nc" id="L63">    }</span>

<span class="nc" id="L65">    return logs;</span>
  }

  private static void extracted(java.io.FileInputStream fin) {
    try {
<span class="nc" id="L70">      fin.close();</span>
<span class="nc" id="L71">    } catch (final IOException ioe) {</span>
<span class="nc" id="L72">      LogsConnexion.LOGGER.log(Level.INFO, EXCEPTION, ioe);</span>
<span class="nc" id="L73">    }</span>
<span class="nc" id="L74">  }</span>

  private static void extracted(final ArrayList&lt;String&gt; logs, java.io.FileInputStream fin) {
    try {
      @SuppressWarnings(&quot;resource&quot;)
<span class="nc" id="L79">      final java.util.Scanner scanner = new java.util.Scanner(fin, &quot;UTF-8&quot;).useDelimiter(&quot;\n&quot;);</span>
      String testString;
<span class="nc bnc" id="L81" title="All 2 branches missed.">      while (scanner.hasNext()) {</span>
<span class="nc" id="L82">        testString = scanner.next();</span>
<span class="nc" id="L83">        logs.add(testString);</span>
      }
<span class="nc" id="L85">      scanner.close();</span>
<span class="nc" id="L86">    } catch (final NullPointerException npe) {</span>
<span class="nc" id="L87">      LogsConnexion.LOGGER.log(Level.INFO, EXCEPTION, npe);</span>
<span class="nc" id="L88">    }</span>
<span class="nc" id="L89">  }</span>
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>