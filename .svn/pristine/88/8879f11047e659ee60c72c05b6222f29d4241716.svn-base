<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>SuggererNouvelleCompetenceForm.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">SuggererNouvelleCompetenceForm.java</span></div><h1>SuggererNouvelleCompetenceForm.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import fr.eseo.atribus.dao.DirecteurProgrammesDao;
import fr.eseo.atribus.dao.NotificationDao;
import fr.eseo.atribus.entities.DirecteurProgrammes;
import fr.eseo.atribus.entities.Eleve;
import fr.eseo.atribus.entities.EnseignantRefUe;
import fr.eseo.atribus.entities.Notification;
import fr.eseo.atribus.entities.Utilisateur;

import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

import java.util.List;
import java.util.logging.Level;

public class SuggererNouvelleCompetenceForm extends MailForm {

  private final DirecteurProgrammesDao directeurProgrammesDao;
  private final NotificationDao notificationDao;

  /**
   * Méthode d'instantiation.
   */
<span class="nc" id="L25">  public SuggererNouvelleCompetenceForm() {</span>
    final BeanFactoryReference bf =
<span class="nc" id="L27">        SingletonBeanFactoryLocator.getInstance().useBeanFactory(&quot;beansDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Directeur programmes */
<span class="nc" id="L29">    this.directeurProgrammesDao =</span>
<span class="nc" id="L30">        (DirecteurProgrammesDao) bf.getFactory().getBean(&quot;directeurProgrammesDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Notification */
<span class="nc" id="L32">    this.notificationDao = (NotificationDao) bf.getFactory().getBean(&quot;notificationDao&quot;);</span>
<span class="nc" id="L33">  }</span>

  /**
   * Suggestion de compétence d'un étudiant.
   * 
   * @param eleve L'éleve.
   * @param competence La compétence.
   * @param commentaire Le commentaire de l'eleve.
   */
  public void suggererCompetence(Eleve eleve, String competence, String commentaire) {
<span class="nc" id="L43">    final String objet = &quot;Suggestion de compétence de la part d'un étudiant.&quot;;</span>
<span class="nc" id="L44">    final String destinataire = &quot;&quot;;</span>
<span class="nc" id="L45">    List&lt;DirecteurProgrammes&gt; dps = this.directeurProgrammesDao.recupererListe();</span>
<span class="nc bnc" id="L46" title="All 2 branches missed.">    for (DirecteurProgrammes dp : dps) {</span>
<span class="nc bnc" id="L47" title="All 2 branches missed.">      if (dp.isNotificationActive()) {</span>
<span class="nc" id="L48">        Notification notification = new Notification();</span>
<span class="nc" id="L49">        notification.setDestinataire(dp.getId());</span>
<span class="nc" id="L50">        notification.setEmetteur(eleve.getId());</span>
<span class="nc" id="L51">        notification.setMessage(objet + &quot; &quot; + this.genererContenu(eleve, competence, commentaire));</span>
        try {
<span class="nc" id="L53">          this.notificationDao.ajouter(notification);</span>
<span class="nc" id="L54">        } catch (Exception exc) {</span>
<span class="nc" id="L55">          MailForm.LOGGER.log(Level.INFO, EXCEPTION, exc);</span>
<span class="nc" id="L56">          this.setErreur(&quot;erreurNotif&quot;, ERROR);</span>
<span class="nc" id="L57">        }</span>
      }
<span class="nc bnc" id="L59" title="All 2 branches missed.">      if (dp.isNotificationMail()) {</span>
<span class="nc" id="L60">        this.envoyerMail(objet, this.genererContenuMail(eleve, competence, commentaire),</span>
            destinataire);
      }
<span class="nc" id="L63">    }</span>
<span class="nc" id="L64">  }</span>

  /**
   * Suggestion de compétence d'un enseignant ref ue.
   * 
   * @param eure L'enseignant ref ue.
   * @param competence La compétence.
   * @param commentaire Le commentaire de l'enseignant ref ue.
   */
  public void suggererCompetence(EnseignantRefUe eure, String competence, String commentaire) {
<span class="nc" id="L74">    final String objet = &quot;Suggestion de compétence de la part d'un enseignant ref ue.&quot;;</span>
<span class="nc" id="L75">    final String destinataire = &quot;&quot;;</span>
<span class="nc" id="L76">    List&lt;DirecteurProgrammes&gt; dps = this.directeurProgrammesDao.recupererListe();</span>
<span class="nc bnc" id="L77" title="All 2 branches missed.">    for (DirecteurProgrammes dp : dps) {</span>
<span class="nc bnc" id="L78" title="All 2 branches missed.">      if (dp.isNotificationActive()) {</span>
<span class="nc" id="L79">        Notification notification = new Notification();</span>
<span class="nc" id="L80">        notification.setDestinataire(dp.getId());</span>
<span class="nc" id="L81">        notification.setEmetteur(eure.getId());</span>
<span class="nc" id="L82">        notification.setMessage(objet + &quot; &quot; + this.genererContenu(eure, competence, commentaire));</span>
        try {
<span class="nc" id="L84">          this.notificationDao.ajouter(notification);</span>
<span class="nc" id="L85">        } catch (Exception exc) {</span>
<span class="nc" id="L86">          MailForm.LOGGER.log(Level.INFO, EXCEPTION, exc);</span>
<span class="nc" id="L87">          this.setErreur(&quot;erreurNotif&quot;, ERROR);</span>
<span class="nc" id="L88">        }</span>
      }
<span class="nc bnc" id="L90" title="All 2 branches missed.">      if (dp.isNotificationMail()) {</span>
<span class="nc" id="L91">        this.envoyerMail(objet, this.genererContenuMail(eure, competence, commentaire),</span>
            destinataire);
      }
<span class="nc" id="L94">    }</span>
<span class="nc" id="L95">  }</span>

  private String genererContenu(Utilisateur utilisateur, String competence, String commentaire) {
<span class="nc" id="L98">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L99">    convocation.append(utilisateur.getNom() + &quot; &quot; + utilisateur.getPrenom());</span>
<span class="nc" id="L100">    convocation.append(&quot; à souhaiter vous suggerer d'ajouter la compétence suivante : &quot;);</span>
<span class="nc" id="L101">    convocation.append(competence);</span>
<span class="nc bnc" id="L102" title="All 2 branches missed.">    if (!(&quot;.&quot;).equals(convocation.substring(convocation.length() - 1))) {</span>
<span class="nc" id="L103">      convocation.append(&quot;.&quot;);</span>
    }
<span class="nc" id="L105">    convocation.append(&quot;Il vous a également ajouté le message suivant : &quot;);</span>
<span class="nc" id="L106">    convocation.append(commentaire);</span>
<span class="nc bnc" id="L107" title="All 2 branches missed.">    if (!(&quot;.&quot;).equals(convocation.substring(convocation.length() - 1))) {</span>
<span class="nc" id="L108">      convocation.append(&quot;. Cordialement.&quot;);</span>
    } else {
<span class="nc" id="L110">      convocation.append(&quot; Cordialement.&quot;);</span>
    }
<span class="nc" id="L112">    return convocation.toString();</span>
  }

  private String genererContenuMail(EnseignantRefUe eure, String competence, String commentaire) {
<span class="nc" id="L116">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L117">    convocation.append(this.messages.getEureSuggereCompetenceUn());</span>
<span class="nc" id="L118">    convocation.append(eure.getNom() + &quot; &quot; + eure.getPrenom());</span>
<span class="nc" id="L119">    convocation.append(this.messages.getEureSuggereCompetenceDeux());</span>
<span class="nc" id="L120">    convocation.append(competence);</span>
<span class="nc" id="L121">    convocation.append(this.messages.getEureSuggereCompetenceTrois());</span>
<span class="nc" id="L122">    convocation.append(commentaire);</span>
<span class="nc" id="L123">    convocation.append(this.messages.getEureSuggereCompetenceQuatre());</span>
<span class="nc" id="L124">    return convocation.toString();</span>
  }

  private String genererContenuMail(Eleve eleve, String competence, String commentaire) {
<span class="nc" id="L128">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L129">    convocation.append(this.messages.getEleveSuggereCompetenceUn());</span>
<span class="nc" id="L130">    convocation.append(eleve.getNom() + &quot; &quot; + eleve.getPrenom());</span>
<span class="nc" id="L131">    convocation.append(this.messages.getEleveSuggereCompetenceDeux());</span>
<span class="nc" id="L132">    convocation.append(competence);</span>
<span class="nc" id="L133">    convocation.append(this.messages.getEleveSuggereCompetenceTrois());</span>
<span class="nc" id="L134">    convocation.append(commentaire);</span>
<span class="nc" id="L135">    convocation.append(this.messages.getEleveSuggereCompetenceQuatre());</span>
<span class="nc" id="L136">    return convocation.toString();</span>
  }
}

</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>