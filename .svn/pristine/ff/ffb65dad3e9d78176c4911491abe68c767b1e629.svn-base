<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>UeFormMethods.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">UeFormMethods.java</span></div><h1>UeFormMethods.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

public class UeFormMethods {
  
<span class="nc" id="L10">  protected UeFormData data = new UeFormData(new HashMap&lt;&gt;());</span>
  
  public UeFormMethods() {
<span class="nc" id="L13">    super();</span>
<span class="nc" id="L14">  }</span>
  
  protected static String getValeurChamp(HttpServletRequest request, String nomChamp) {
<span class="nc" id="L17">    final String valeur = request.getParameter(nomChamp);</span>
<span class="nc bnc" id="L18" title="All 4 branches missed.">    if (valeur == null || valeur.trim().length() == 0) {</span>
<span class="nc" id="L19">      return null;</span>
    } else {
<span class="nc" id="L21">      return valeur.trim();</span>
    }
  }

  public String getResultat() {
<span class="nc" id="L26">    return this.data.getResultat();</span>
  }

  public Map&lt;String, String&gt; getErreurs() {
<span class="nc" id="L30">    return this.data.getErreurs();</span>
  }

  protected void validationCompetence(String competence) throws FormValidationException {
<span class="nc bnc" id="L34" title="All 2 branches missed.">    if (this.data.getCompetenceBdd().trouverUniqueParNom(competence) == null) {</span>
<span class="nc" id="L35">      throw new FormValidationException(&quot;Cette comp√©tence n'existe pas&quot;);</span>
    }
<span class="nc" id="L37">  }</span>

  protected void validationEnseignant(String enseignant) throws FormValidationException {
<span class="nc bnc" id="L40" title="All 2 branches missed.">    if (this.data.getEnseignantBdd().trouverParNom(enseignant) == null) {</span>
<span class="nc" id="L41">      throw new FormValidationException(&quot;Cet examen n'existe pas&quot;);</span>
    }
<span class="nc" id="L43">  }</span>
  
  protected void validationPromotion(String promotion) throws FormValidationException {
<span class="nc bnc" id="L46" title="All 2 branches missed.">    if (this.data.getPromotionBdd().trouverParNom(promotion) == null) {</span>
<span class="nc" id="L47">      throw new FormValidationException(&quot;Cette promotion n'existe pas&quot;);</span>
    }
<span class="nc" id="L49">  }</span>

  protected void setErreur(String champ, String message) {
<span class="nc" id="L52">    this.getErreurs().put(champ, message);</span>
<span class="nc" id="L53">  }</span>
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>