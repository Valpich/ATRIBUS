<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>ExamenForm.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">ExamenForm.java</span></div><h1>ExamenForm.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import fr.eseo.atribus.dao.EleveDao;
import fr.eseo.atribus.dao.EvaluationDao;
import fr.eseo.atribus.dao.ExamenDao;
import fr.eseo.atribus.entities.Eleve;

import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

public class ExamenForm {
<span class="nc" id="L16">  protected static final Logger LOGGER = Logger.getLogger(ExamenForm.class.getName());</span>
  protected static final String EXCEPTION = &quot;Exception&quot;;

  protected String resultat;
<span class="nc" id="L20">  protected final Map&lt;String, String&gt; erreurs = new HashMap&lt;&gt;();</span>
  protected final ExamenDao examenDao;
  protected final EleveDao eleveDao;
  protected final EvaluationDao evaluationDao;

<span class="nc" id="L25">  public ExamenForm() {</span>
    final BeanFactoryReference bf =
<span class="nc" id="L27">        SingletonBeanFactoryLocator.getInstance().useBeanFactory(&quot;beansDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Examen */
<span class="nc" id="L29">    this.examenDao = (ExamenDao) bf.getFactory().getBean(&quot;examenDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Eleve */
<span class="nc" id="L31">    this.eleveDao = (EleveDao) bf.getFactory().getBean(&quot;eleveDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Evaluation */
<span class="nc" id="L33">    this.evaluationDao = (EvaluationDao) bf.getFactory().getBean(&quot;evaluationDao&quot;);</span>
<span class="nc" id="L34">  }</span>

  public String getResultat() {
<span class="nc" id="L37">    return this.resultat;</span>
  }

  public Map&lt;String, String&gt; getErreurs() {
<span class="nc" id="L41">    return this.erreurs;</span>
  }
  
  protected void validationEleve(Eleve eleve) throws FormValidationException {
<span class="nc bnc" id="L45" title="All 2 branches missed.">    if (this.eleveDao.trouverParLoginHash(eleve.getLogin(), eleve.getPassword()) == null) {</span>
<span class="nc" id="L46">      throw new FormValidationException(&quot;L'eleve n'existe pas.&quot;);</span>
    }
<span class="nc" id="L48">  }</span>

  /*
   * Ajoute un message correspondant au champ spécifié à la map des erreurs.
   */
  protected void setErreur(String champ, String message) {
<span class="nc" id="L54">    this.erreurs.put(champ, message);</span>
<span class="nc" id="L55">  }</span>

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>