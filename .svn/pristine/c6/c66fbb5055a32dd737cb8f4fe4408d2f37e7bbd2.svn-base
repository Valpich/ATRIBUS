package fr.eseo.atribus.beans;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNotNull;

import fr.eseo.atribus.dao.EleveDao;
import fr.eseo.atribus.dao.EvaluationDao;
import fr.eseo.atribus.dao.ExamenDao;
import fr.eseo.atribus.entities.Eleve;
import fr.eseo.atribus.entities.Evaluation;
import fr.eseo.atribus.entities.Examen;

import org.powermock.api.mockito.PowerMockito;
import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ExporteurCsvTest {
  
  private EleveDao eleveDao;
  private EvaluationDao evaluationDao;
  private ExamenDao examenDao;
  private List<Eleve> listeEleves;
  private List<Evaluation> listeEvaluations;
  private List<Examen> listeExamens;
  private Eleve eleve;
  private Examen examen;
  
  /**
   * Initialisation.
   */
  @BeforeTest
  public void beforeClass() {
    
    final BeanFactoryReference bf =
        SingletonBeanFactoryLocator.getInstance().useBeanFactory("beansDao");
    this.eleveDao = (EleveDao) bf.getFactory().getBean("eleveDao");
    this.evaluationDao = (EvaluationDao) bf.getFactory().getBean("evaluationDao");
    this.examenDao = (ExamenDao) bf.getFactory().getBean("examenDao");
  }

  @Test
  public void generateCsvFile() {
   
    listeEleves = new ArrayList<>();
    listeEvaluations = new ArrayList<>();
    listeExamens = new ArrayList<>();
    
    listeEleves = this.eleveDao.recupererListe();
    listeEvaluations = this.evaluationDao.trouverToutesLesEvaluations(); 
    listeExamens = this.examenDao.trouverTousLesExamens();
    
    PowerMockito.mockStatic(ExporteurCsv.class);
    
    ExporteurCsv.generateCsvFile("nom", listeEleves, listeEvaluations, listeExamens);
    
    assertNotNull(listeEleves);
    assertNotNull(listeEvaluations);
    assertNotNull(listeExamens);

  }
  
  @Test
  public void majMap() {
    
    try {
      
      final Map<Eleve, Map<Examen, Float>> notesEleveExamens = new HashMap<>();
      
      eleve = new Eleve();
      examen = new Examen();
      
      notesEleveExamens.put(eleve, new HashMap<>());
      
      eleve = this.eleveDao.trouverParId(0);
      examen = this.examenDao.trouverParNom("Microprocesseur");
      
      PowerMockito.mockStatic(ExporteurCsv.class);
      
      ExporteurCsv.majMap(notesEleveExamens, eleve, examen, true, new Float(20));
      
      assertEquals(eleve.getId(), 0);
      assertNotNull(examen.getNom(), "Microprocesseur");
      
    } catch (Exception excpt) {
      excpt.getMessage();
    }
    
  }
  
  
  
}
