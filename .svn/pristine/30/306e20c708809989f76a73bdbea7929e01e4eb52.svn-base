<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>SemestreDaoImpl.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.dao</a> &gt; <span class="el_source">SemestreDaoImpl.java</span></div><h1>SemestreDaoImpl.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.dao;

import fr.eseo.atribus.entities.Semestre;

import org.joda.time.DateTime;
import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class SemestreDaoImpl implements SemestreDao {

  private final DaoFactory daoFactory;

  private static final String SQL_LISTER_SEMESTRE = &quot;SELECT * FROM semestre&quot;;
  private static final String SQL_TROUVER_SEMESTRE = &quot;SELECT * FROM semestre WHERE numero = ?&quot;;

<span class="nc" id="L23">  SemestreDaoImpl() {</span>
    final BeanFactoryReference bf =
<span class="nc" id="L25">        SingletonBeanFactoryLocator.getInstance().useBeanFactory(&quot;contextDao&quot;);</span>
<span class="nc" id="L26">    this.daoFactory = (DaoFactory) bf.getFactory().getBean(&quot;daoFactory&quot;);</span>
<span class="nc" id="L27">  }</span>

  /*
   * Procédure qui permet d'établir la liste des semestres disponibles dans la BDD
   */

  @Override
  public List&lt;Semestre&gt; listerSemestre() {
<span class="nc" id="L35">    final ArrayList&lt;Semestre&gt; listeSemestre = new ArrayList&lt;&gt;();</span>
<span class="nc" id="L36">    Connection connexion = null;</span>
<span class="nc" id="L37">    PreparedStatement preparedStatement = null;</span>
<span class="nc" id="L38">    ResultSet resultSet = null;</span>
    try {
      // Récupération d'une connexion depuis la Factory
<span class="nc" id="L41">      connexion = this.daoFactory.getConnection();</span>
<span class="nc" id="L42">      preparedStatement = connexion.prepareStatement(SemestreDaoImpl.SQL_LISTER_SEMESTRE);</span>
<span class="nc" id="L43">      resultSet = preparedStatement.executeQuery();</span>

<span class="nc bnc" id="L45" title="All 2 branches missed.">      while (resultSet.next()) {</span>
<span class="nc" id="L46">        listeSemestre.add(SemestreDaoImpl.map(resultSet));</span>
      }
<span class="nc" id="L48">    } catch (final SQLException sqle) {</span>
<span class="nc" id="L49">      throw new DaoException(sqle);</span>
    } finally {
<span class="nc" id="L51">      DaoUtilitaire.fermeturesSilencieuses(resultSet, preparedStatement, connexion);</span>
<span class="nc" id="L52">    }</span>

<span class="nc" id="L54">    return listeSemestre;</span>
  }

  /**
   * Méthode qui renvoie un semestre null s'il n'est pas dans la BDD.
   */
  @Override
  public Semestre trouverParNumero(int numeroSemestre) {

<span class="nc" id="L63">    Semestre semestre = null;</span>
<span class="nc" id="L64">    Connection connexion = null;</span>
<span class="nc" id="L65">    PreparedStatement preparedStatement = null;</span>
<span class="nc" id="L66">    ResultSet resultSet = null;</span>

    try {

<span class="nc" id="L70">      connexion = this.daoFactory.getConnection();</span>
<span class="nc" id="L71">      preparedStatement = DaoUtilitaire.initialisationRequetePreparee(connexion,</span>
<span class="nc" id="L72">          SemestreDaoImpl.SQL_TROUVER_SEMESTRE, false, numeroSemestre);</span>
<span class="nc" id="L73">      resultSet = preparedStatement.executeQuery();</span>

<span class="nc bnc" id="L75" title="All 2 branches missed.">      if (resultSet.next()) {</span>
<span class="nc" id="L76">        semestre = new Semestre();</span>
<span class="nc" id="L77">        semestre = SemestreDaoImpl.map(resultSet);</span>
      }

<span class="nc" id="L80">    } catch (final SQLException sqle) {</span>
<span class="nc" id="L81">      throw new DaoException(sqle);</span>
    } finally {
<span class="nc" id="L83">      DaoUtilitaire.fermeturesSilencieuses(resultSet, preparedStatement, connexion);</span>
<span class="nc" id="L84">    }</span>

<span class="nc" id="L86">    return semestre;</span>

  }

  /*
   * Simple méthode utilitaire permettant de faire la correspondance (le mapping) entre une ligne
   * issue de la table des semestres (un ResultSet) et un bean semestre.
   */
  private static Semestre map(ResultSet resultSet) throws SQLException {
<span class="nc" id="L95">    final Semestre semestre = new Semestre();</span>
<span class="nc" id="L96">    semestre.setId(resultSet.getInt(&quot;id&quot;));</span>
<span class="nc" id="L97">    semestre.setNumeroSemestre(resultSet.getInt(&quot;numero&quot;));</span>
<span class="nc" id="L98">    semestre.setDateDebut(new DateTime(resultSet.getDate(&quot;date_debut&quot;)));</span>
<span class="nc" id="L99">    semestre.setDateFin(new DateTime(resultSet.getInt(&quot;date_fin&quot;)));</span>
<span class="nc" id="L100">    return semestre;</span>
  }

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>