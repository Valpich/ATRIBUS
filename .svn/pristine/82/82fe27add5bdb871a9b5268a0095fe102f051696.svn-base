<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>UtilisateurForm.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">UtilisateurForm.java</span></div><h1>UtilisateurForm.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import fr.eseo.atribus.dao.AdminSystDao;
import fr.eseo.atribus.dao.DirecteurEtudesDao;
import fr.eseo.atribus.dao.DirecteurProgrammesDao;
import fr.eseo.atribus.dao.EleveDao;
import fr.eseo.atribus.dao.EnseignantDao;
import fr.eseo.atribus.dao.EnseignantRefMatiereDao;
import fr.eseo.atribus.dao.EnseignantRefUeDao;
import fr.eseo.atribus.dao.UtilisateurDao;

import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

public class UtilisateurForm {
  protected static final String NOM_BOUTON_SUPPRIMER = &quot;modifier&quot;;
  protected static final String NOM_BOUTON_SUPPRIMER2 = &quot;supprimer&quot;; /** TODO : voir **/
  protected static final String CHAMP_LOGIN = &quot;login&quot;;
  protected static final String CHAMP_PASS = &quot;password&quot;;
  protected static final String CHAMP_NOM = &quot;nom&quot;;
  protected static final String CHAMP_PRENOM = &quot;prenom&quot;;
  protected static final String CHAMP_EMAIL = &quot;email&quot;;
  protected static final String CB_AS = &quot;cbAS&quot;; // CheckBox Admin système
  protected static final String CB_DE = &quot;cbDE&quot;; // CheckBox Directeur études
  protected static final String CB_DP = &quot;cbDP&quot;; // CheckBox Directeur programmes
  protected static final String CB_EN = &quot;cbEN&quot;; // CheckBox Enseignant
  protected static final String CB_EURE = &quot;cbERUE&quot;; // CheckBox Enseignant
  protected static final String CB_ERM = &quot;cbERM&quot;; // CheckBox Enseignant
  protected static final String CB_EL = &quot;cbEL&quot;; // CheckBox élève
  protected static final String EXCEPTION = &quot;Exception&quot;;

  protected String resultat;
<span class="nc" id="L38">  protected Map&lt;String, String&gt; erreurs = new HashMap&lt;&gt;();</span>

  protected UtilisateurDao utilisateurDao;
  protected final AdminSystDao adminSystDao;
  protected final DirecteurEtudesDao directeurEtudesDao;
  protected final DirecteurProgrammesDao directeurProgrammesDao;
  protected final EnseignantDao enseignantDao;
  protected final EnseignantRefMatiereDao enseignantRefMatiereDao;
  protected final EnseignantRefUeDao enseignantRefUeDao;
  protected final EleveDao eleveDao;

  public UtilisateurForm() {
<span class="nc" id="L50">    super();</span>
    final BeanFactoryReference bf =
<span class="nc" id="L52">        SingletonBeanFactoryLocator.getInstance().useBeanFactory(&quot;beansDao&quot;);</span>
<span class="nc" id="L53">    this.utilisateurDao = (UtilisateurDao) bf.getFactory().getBean(&quot;utilisateurDao&quot;);</span>
<span class="nc" id="L54">    this.adminSystDao = (AdminSystDao) bf.getFactory().getBean(&quot;adminSystDao&quot;);</span>
<span class="nc" id="L55">    this.directeurEtudesDao = (DirecteurEtudesDao) bf.getFactory().getBean(&quot;directeurEtudesDao&quot;);</span>
<span class="nc" id="L56">    this.directeurProgrammesDao =</span>
<span class="nc" id="L57">        (DirecteurProgrammesDao) bf.getFactory().getBean(&quot;directeurProgrammesDao&quot;);</span>
<span class="nc" id="L58">    this.enseignantDao = (EnseignantDao) bf.getFactory().getBean(&quot;enseignantDao&quot;);</span>
<span class="nc" id="L59">    this.enseignantRefMatiereDao = (EnseignantRefMatiereDao) bf.getFactory().getBean(&quot;enseignantRefMatiereDao&quot;);</span>
<span class="nc" id="L60">    this.enseignantRefUeDao = (EnseignantRefUeDao) bf.getFactory().getBean(&quot;enseignantRefUeDao&quot;);</span>
<span class="nc" id="L61">    this.eleveDao = (EleveDao) bf.getFactory().getBean(&quot;eleveDao&quot;);</span>
<span class="nc" id="L62">  }</span>

  /**
   * Ajoute un message correspondant au champ spécifié à la map des erreurs.
   */
  protected void setErreur(String champ, String message) {
<span class="nc" id="L68">    this.erreurs.put(champ, message);</span>
<span class="nc" id="L69">  }</span>

  /**
   * Méthode utilitaire qui retourne null si un champ est vide, et son contenu sinon.
   */
  protected static String getValeurChamp(HttpServletRequest request, String nomChamp) {
<span class="nc" id="L75">    final String valeur = request.getParameter(nomChamp);</span>
<span class="nc bnc" id="L76" title="All 4 branches missed.">    if (valeur == null || valeur.trim().length() == 0) {</span>
<span class="nc" id="L77">      return null;</span>
    } else {
<span class="nc" id="L79">      return valeur.trim();</span>
    }
  }

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>