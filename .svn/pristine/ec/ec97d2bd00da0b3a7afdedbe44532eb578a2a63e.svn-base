<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>RepondreExamenForm.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">RepondreExamenForm.java</span></div><h1>RepondreExamenForm.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import fr.eseo.atribus.dao.DaoException;
import fr.eseo.atribus.entities.Eleve;
import fr.eseo.atribus.entities.Examen;

import java.util.List;
import java.util.logging.Level;

<span class="nc" id="L10">public class RepondreExamenForm extends ExamenForm {</span>

  public int repondre(Eleve eleve, List&lt;String&gt; reponses, String examenString,
      Boolean autoEvaluation) {
<span class="nc" id="L14">    final Examen examen = this.examenDao.trouverParNom(examenString);</span>
    try {
<span class="nc bnc" id="L16" title="All 4 branches missed.">      if (examen == null|| examen.getAutoEvaluation()) {</span>
<span class="nc" id="L17">        this.erreurs.put(&quot;mauvaisExamen&quot;, &quot;Examen invalide&quot;);</span>
      } else {
<span class="nc" id="L19">        this.traiterDonnees(eleve, reponses, examen);</span>
      }
<span class="nc bnc" id="L21" title="All 2 branches missed.">      if (this.erreurs.isEmpty()) {</span>
<span class="nc" id="L22">        this.evaluationDao.repondre(eleve, reponses, examen, autoEvaluation);</span>
<span class="nc" id="L23">        this.resultat = &quot;Succès de l'ajout des réponses l'examen.&quot;;</span>
<span class="nc" id="L24">        return 1;</span>
      } else {
<span class="nc" id="L26">        this.resultat = &quot;Échec de l'ajout des réponses l'examen.&quot;;</span>
      }
<span class="nc" id="L28">    } catch (final DaoException ebdd) {</span>
<span class="nc" id="L29">      this.resultat = &quot;Échec de l'ajout des réponses de examen : une erreur imprévue est survenue,&quot;</span>
          + &quot; merci de réessayer dans quelques instants.&quot;;
<span class="nc" id="L31">      RepondreExamenForm.LOGGER.log(Level.INFO, EXCEPTION, ebdd);</span>
<span class="nc" id="L32">    }</span>

<span class="nc" id="L34">    return -1;</span>

  }

  private void traiterDonnees(Eleve eleve, List&lt;String&gt; reponses, Examen examen) {
    try {
<span class="nc" id="L40">      this.validationReponses(reponses, examen);</span>
<span class="nc" id="L41">    } catch (final FormValidationException fve) {</span>
<span class="nc" id="L42">      RepondreExamenForm.LOGGER.log(Level.INFO, EXCEPTION, fve);</span>
<span class="nc" id="L43">      this.setErreur(&quot;nbReponses&quot;, fve.getMessage());</span>
<span class="nc" id="L44">    }</span>
    try {
<span class="nc" id="L46">      this.validationEleve(eleve);</span>
<span class="nc" id="L47">    } catch (final FormValidationException fve) {</span>
<span class="nc" id="L48">      RepondreExamenForm.LOGGER.log(Level.INFO, EXCEPTION, fve);</span>
<span class="nc" id="L49">      this.setErreur(&quot;eleve&quot;, fve.getMessage());</span>
<span class="nc" id="L50">    }</span>
<span class="nc" id="L51">  }</span>

  private void validationReponses(List&lt;String&gt; reponses, Examen examen)
      throws FormValidationException {
<span class="nc bnc" id="L55" title="All 2 branches missed.">    if (reponses.size() != examen.getExercices().size()) {</span>
<span class="nc" id="L56">      throw new FormValidationException(</span>
          &quot;Le nombre de réponses ne correspond pas au nombre de questions.&quot;);
    }
<span class="nc" id="L59">  }</span>

}

</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>