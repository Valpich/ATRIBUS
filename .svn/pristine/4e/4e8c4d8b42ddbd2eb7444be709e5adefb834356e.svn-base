<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>ContacterAdministrateursForm.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.forms</a> &gt; <span class="el_source">ContacterAdministrateursForm.java</span></div><h1>ContacterAdministrateursForm.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.forms;

import fr.eseo.atribus.dao.AdminSystDao;
import fr.eseo.atribus.dao.NotificationDao;
import fr.eseo.atribus.entities.AdminSyst;
import fr.eseo.atribus.entities.Notification;
import fr.eseo.atribus.entities.Utilisateur;

import org.springframework.beans.factory.access.BeanFactoryReference;
import org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

public class ContacterAdministrateursForm extends MailForm {

  private final AdminSystDao adminSystDao;
  private final NotificationDao notificationDao;

  /**
   * Méthode d'instantiation.
   */
<span class="nc" id="L20">  public ContacterAdministrateursForm() {</span>
    final BeanFactoryReference bf =
<span class="nc" id="L22">        SingletonBeanFactoryLocator.getInstance().useBeanFactory(&quot;beansDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Eleve */
<span class="nc" id="L24">    this.adminSystDao = (AdminSystDao) bf.getFactory().getBean(&quot;adminSystDao&quot;);</span>
    /* Récupération d'une instance de notre DAO Notification */
<span class="nc" id="L26">    this.notificationDao = (NotificationDao) bf.getFactory().getBean(&quot;notificationDao&quot;);</span>
<span class="nc" id="L27">  }</span>

  /**
   * Méthode pour contacter un administrateur.
   * @param utilisateur utilisateur
   * @param message message
   */
  public void contacterAdministrateurs(Utilisateur utilisateur, String message) {
<span class="nc" id="L35">    final String objet = &quot;Bonjour chez administrateur.&quot;;</span>
<span class="nc bnc" id="L36" title="All 2 branches missed.">    for (AdminSyst admin : this.adminSystDao.recupererListe()) {</span>
<span class="nc bnc" id="L37" title="All 2 branches missed.">      if (admin.isNotificationActive()) {</span>
<span class="nc" id="L38">        Notification notification = new Notification();</span>
<span class="nc" id="L39">        notification.setDestinataire(admin.getId());</span>
<span class="nc" id="L40">        notification.setEmetteur(utilisateur.getId());</span>
<span class="nc" id="L41">        notification.setMessage(objet + &quot; &quot; + this.genererContenu(utilisateur, message));</span>
<span class="nc" id="L42">        this.notificationDao.ajouter(notification);</span>
      }
<span class="nc bnc" id="L44" title="All 2 branches missed.">      if (admin.isNotificationMail()) {</span>
<span class="nc" id="L45">        this.envoyerMail(objet, this.genererContenuMail(utilisateur, message), admin.getEmail());</span>
      }
<span class="nc" id="L47">    }</span>
<span class="nc" id="L48">  }</span>

  public void contacterAdministrateurs(String message) {
<span class="nc" id="L51">    final String objet = &quot;Bonjour chez administrateur.&quot;;</span>
<span class="nc bnc" id="L52" title="All 2 branches missed.">    for (AdminSyst admin : this.adminSystDao.recupererListe()) {</span>
<span class="nc bnc" id="L53" title="All 2 branches missed.">      if (admin.isNotificationActive()) {</span>
<span class="nc" id="L54">        Notification notification = new Notification();</span>
<span class="nc" id="L55">        notification.setDestinataire(admin.getId());</span>
<span class="nc" id="L56">        notification.setEmetteur(1);</span>
<span class="nc" id="L57">        notification.setMessage(objet + &quot; &quot; + this.genererContenu(message));</span>
<span class="nc" id="L58">        this.notificationDao.ajouter(notification);</span>
      }
<span class="nc bnc" id="L60" title="All 2 branches missed.">      if (admin.isNotificationMail()) {</span>
<span class="nc" id="L61">        this.envoyerMail(objet, this.genererContenuMail(message), admin.getEmail());</span>
      }
<span class="nc" id="L63">    }</span>
<span class="nc" id="L64">  }</span>

  private String genererContenu(Utilisateur utilisateur, String message) {
<span class="nc" id="L67">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L68">    convocation.append(&quot;L'utilisateur &quot;);</span>
<span class="nc" id="L69">    convocation.append(utilisateur.getNom() + &quot; &quot; + utilisateur.getPrenom());</span>
<span class="nc" id="L70">    convocation.append(&quot; à souhaiter vous donner le message suivant : &quot;);</span>
<span class="nc" id="L71">    convocation.append(message);</span>
<span class="nc bnc" id="L72" title="All 2 branches missed.">    if (!(&quot;.&quot;).equals(convocation.substring(convocation.length() - 1))) {</span>
<span class="nc" id="L73">      convocation.append(&quot;. Cordialement.&quot;);</span>
    } else {
<span class="nc" id="L75">      convocation.append(&quot; Cordialement.&quot;);</span>
    }
<span class="nc" id="L77">    return convocation.toString();</span>
  }

  private String genererContenuMail(Utilisateur utilisateur, String message) {
<span class="nc" id="L81">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L82">    convocation.append(&quot;L'utilisateur &quot;);</span>
<span class="nc" id="L83">    convocation.append(utilisateur.getNom() + &quot; &quot; + utilisateur.getPrenom());</span>
<span class="nc" id="L84">    convocation.append(&quot; à souhaiter vous donner le message suivant :&lt;br/&gt;&quot;);</span>
<span class="nc" id="L85">    convocation.append(message);</span>
<span class="nc" id="L86">    convocation.append(&quot;&lt;br/&gt;Cordialement.&quot;);</span>
<span class="nc" id="L87">    return convocation.toString();</span>
  }

  private String genererContenu(String message) {
<span class="nc" id="L91">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L92">    convocation.append(&quot;Un utilisateur anonyme à souhaiter vous donner le message suivant : &quot;);</span>
<span class="nc" id="L93">    convocation.append(message);</span>
<span class="nc bnc" id="L94" title="All 2 branches missed.">    if (!(&quot;.&quot;).equals(convocation.substring(convocation.length() - 1))) {</span>
<span class="nc" id="L95">      convocation.append(&quot;. Cordialement.&quot;);</span>
    } else {
<span class="nc" id="L97">      convocation.append(&quot; Cordialement.&quot;);</span>
    }
<span class="nc" id="L99">    return convocation.toString();</span>
  }

  private String genererContenuMail(String message) {
<span class="nc" id="L103">    final StringBuilder convocation = new StringBuilder();</span>
<span class="nc" id="L104">    convocation.append(&quot;Un utilisateur anonyme à souhaiter vous donner le message suivant :&lt;br/&gt;&quot;);</span>
<span class="nc" id="L105">    convocation.append(message);</span>
<span class="nc" id="L106">    convocation.append(&quot;&lt;br/&gt;Cordialement.&quot;);</span>
<span class="nc" id="L107">    return convocation.toString();</span>
  }
  
}

</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>