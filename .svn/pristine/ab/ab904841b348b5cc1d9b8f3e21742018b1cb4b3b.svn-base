<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../.resources/report.gif" type="image/gif"/><title>FiltreErreurRequete.java</title><link rel="stylesheet" href="../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../.sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Atribus</a> &gt; <a href="index.source.html" class="el_package">fr.eseo.atribus.filters</a> &gt; <span class="el_source">FiltreErreurRequete.java</span></div><h1>FiltreErreurRequete.java</h1><pre class="source lang-java linenums">package fr.eseo.atribus.filters;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet Filter implementation class FiltreErreurRequete.
 */
public class FiltreErreurRequete implements Filter {

<span class="nc" id="L21">  private static final Logger LOGGER =</span>
<span class="nc" id="L22">      Logger.getLogger(FiltreLimiteurRequeteApplication.class.getName());</span>

  /**
   * Default constructor.
   */
  public FiltreErreurRequete() {
<span class="nc" id="L28">    super();</span>
<span class="nc" id="L29">  }</span>

  /**
   * @see Filter#destroy().
   */
  @Override
  public void destroy() {
<span class="nc" id="L36">    return;</span>
  }

  /**
   * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain).
   */
  @Override
  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
      throws IOException, ServletException {
<span class="nc bnc" id="L45" title="All 2 branches missed.">    if (((HttpServletResponse) response).getStatus() != 200) {</span>
<span class="nc" id="L46">      String adresseIp = ((HttpServletRequest) request).getHeader(&quot;X-FORWARDED-FOR&quot;);</span>
<span class="nc bnc" id="L47" title="All 2 branches missed.">      if (adresseIp == null) {</span>
<span class="nc" id="L48">        adresseIp = request.getRemoteAddr();</span>
      }
<span class="nc" id="L50">      FiltreErreurRequete.LOGGER.setLevel(Level.WARNING);</span>
<span class="nc" id="L51">      FiltreErreurRequete.LOGGER.severe(&quot;L'adresse IP : &quot; + adresseIp + &quot; à généré une erreur : &quot;</span>
<span class="nc" id="L52">          + ((HttpServletResponse) response).getStatus());</span>
    }
<span class="nc" id="L54">    chain.doFilter(request, response);</span>
<span class="nc" id="L55">  }</span>

  /**
   * @see Filter#init(FilterConfig).
   */
  @Override
  public void init(FilterConfig fiConfig) throws ServletException {
<span class="nc" id="L62">    return;</span>
  }

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.6.201602180812</span></div></body></html>